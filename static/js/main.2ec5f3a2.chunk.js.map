{"version":3,"sources":["components/PageNavLink.tsx","components/MainNav.tsx","pages/HomePage.tsx","pages/PageNotFound.tsx","components/Tabs.tsx","pages/TabsPage.tsx","App.tsx","index.tsx"],"names":["PageNavLink","to","text","className","isActive","classNames","MainNav","HomePage","PageNotFound","Tabs","tabs","selected","map","tab","value","id","title","content","TabsPage","useParams","slice","App","path","element","replace","index","ReactDOM","render","document","getElementById"],"mappings":"gPASaA,EAAyB,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACpC,cAAC,IAAD,CACED,GAAIA,EACJE,UAAW,gBAAGC,EAAH,EAAGA,SAAH,OAAkBC,IAAW,cACtC,CAAE,8BAA+BD,KAHrC,SAKGF,KCbQI,EAAU,kBACrB,qBACE,UAAQ,MACRH,UAAU,0CAFZ,SAIE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,EAAD,CAAaF,GAAG,IAAIC,KAAK,SACzB,cAAC,EAAD,CAAaD,GAAG,OAAOC,KAAK,iBCVvBK,EAAqB,kBAChC,oBAAIJ,UAAU,QAAd,wBCDWK,EAAyB,kBACpC,oBAAIL,UAAU,QAAd,6BCcWM,EAAkB,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,SACtC,OACE,6BACGD,EAAKE,KAAI,SAAAC,GAAG,OACX,oBAEEC,MAAOD,EAAIE,GACX,UAAQ,MACR,cAAY,OACZZ,UAAWE,IAAW,GACpB,CAAE,YAAaQ,EAAIE,KAAOJ,IAN9B,SAQE,cAAC,IAAD,CAAMV,GAAE,aAAQY,EAAIE,IAAM,UAAQ,UAAlC,SACGF,EAAIG,SARFH,EAAIE,UCjBbL,EAAO,CACX,CAAEK,GAAI,QAASC,MAAO,QAASC,QAAS,eACxC,CAAEF,GAAI,QAASC,MAAO,QAASC,QAAS,eACxC,CAAEF,GAAI,QAASC,MAAO,QAASC,QAAS,gBAG7BC,EAAqB,WAChC,IAAQH,EAAOI,cAAPJ,GAER,OACE,qCACE,oBAAIZ,UAAU,QAAd,uBAEA,qBAAKA,UAAU,gBAAf,SACE,cAAC,EAAD,CACEO,KAAMA,EACNC,SAAUI,GAAM,OAIlBA,EAOE,qBAAKZ,UAAU,QAAQ,UAAQ,aAA/B,6BACgBY,EAAGK,OAAO,MAN1B,qBAAKjB,UAAU,QAAQ,UAAQ,aAA/B,qCCdGkB,EAAM,kBAEjB,qCACE,cAAC,EAAD,IAEA,qBAAKlB,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOmB,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,OAAOC,QAAS,cAAC,IAAD,CAAUtB,GAAG,IAAIuB,SAAO,MAEpD,eAAC,IAAD,CAAOF,KAAK,QAAZ,UACE,cAAC,IAAD,CAAOG,OAAK,EAACF,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOD,KAAK,MAAMC,QAAS,cAAC,EAAD,SAG7B,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,EAAD,iBCvBnCG,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.2ec5f3a2.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string;\n  text: string;\n};\n\nexport const PageNavLink: FC<Props> = ({ to, text }) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => classNames('navbar-item',\n      { 'has-background-grey-lighter': isActive })}\n  >\n    {text}\n  </NavLink>\n);\n","import { PageNavLink } from './PageNavLink';\n\nexport const MainNav = () => (\n  <nav\n    data-cy=\"Nav\"\n    className=\"navbar is-light is-fixed-top has-shadow\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavLink to=\"/\" text=\"Home\" />\n        <PageNavLink to=\"tabs\" text=\"Tabs\" />\n      </div>\n    </div>\n  </nav>\n);\n","export const HomePage: React.FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","export const PageNotFound: React.FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { FC } from 'react';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\n\ntype Tab = {\n  id: string;\n  title: string;\n  content: string;\n};\n\ntype Props = {\n  tabs: Tab[],\n  selected: string,\n};\n\nexport const Tabs: FC<Props> = ({ tabs, selected }: Props) => {\n  return (\n    <ul>\n      {tabs.map(tab => (\n        <li\n          key={tab.id}\n          value={tab.id}\n          data-cy=\"Tab\"\n          aria-hidden=\"true\"\n          className={classNames('',\n            { 'is-active': tab.id === selected })}\n        >\n          <Link to={`../${tab.id}`} data-cy=\"TabLink\">\n            {tab.title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport { Tabs } from '../components/Tabs';\n\nconst tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const TabsPage: React.FC = () => {\n  const { id } = useParams<string>();\n\n  return (\n    <>\n      <h1 className=\"title\">Tabs Page</h1>\n\n      <div className=\"tabs is-boxed\">\n        <Tabs\n          tabs={tabs}\n          selected={id || ''}\n        />\n      </div>\n\n      {!id\n        ? (\n          <div className=\"block\" data-cy=\"TabContent\">\n            Please select a tab\n          </div>\n        )\n        : (\n          <div className=\"block\" data-cy=\"TabContent\">\n            {`Some text ${id.slice(-1)}`}\n          </div>\n        )}\n    </>\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nimport { MainNav } from './components/MainNav';\nimport { HomePage } from './pages/HomePage';\nimport { PageNotFound } from './pages/PageNotFound';\nimport { TabsPage } from './pages/TabsPage';\n\nexport const App = () => (\n\n  <>\n    <MainNav />\n\n    <div className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n\n          <Route path=\"/tabs\">\n            <Route index element={<TabsPage />} />\n            <Route path=\":id\" element={<TabsPage />} />\n          </Route>\n\n          <Route path=\"*\" element={<PageNotFound />} />\n        </Routes>\n      </div>\n    </div>\n  </>\n);\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}